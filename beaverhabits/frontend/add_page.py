from nicegui import ui, ClientCommander, error_dialog, success_dialog, logger from beaverhabits.frontend.components import ( HabitAddButton, HabitDeleteButton, HabitNameInput, HabitStarCheckbox, ) from beaverhabits.frontend.layout import layout from beaverhabits.storage.storage import HabitList, Habit grid_classes = "w-full gap-0 items-center" async def item_drop(e: dict, habit_list: HabitList, client: ClientCommander): try: item_id = e['detail']['item'] target_id = e['detail']['target'] if item_id != target_id: item_index = next(i for i, habit in enumerate(habit_list.habits) if habit.id == item_id) target_index = next(i for i, habit in enumerate(habit_list.habits) if habit.id == target_id) habit_list.habits.insert(target_index, habit_list.habits.pop(item_index)) client.send(ClientCommander.JAVASCRIPT, f"document.getElementById('{item_id}').style.opacity = '1'") except Exception as e: logger.error(f"Error during item drop: {e}") error_dialog(f"Error: {e}") @ui.refreshable def add_ui(habit_list: HabitList): ui.add_head_html(''' <script> document.addEventListener('DOMContentLoaded', () => { const sortable = new Sortable.default(document.getElementById('habit-list'), { animation: 150, onEnd: function (evt) { const item = evt.item; const target = evt.to; const targetId = target.id; const itemId = item.id; item.style.opacity = '0.5'; emitEvent('item-drop', { item: itemId, target: targetId }); } }); }); </script> ''') with ui.column().classes(grid_classes).id('habit-list'): for item in sorted(habit_list.habits, key=lambda x: x.name): with ui.grid(columns=9, rows=1).classes(grid_classes): name_input = HabitNameInput(item) name_input.classes("col-span-7 break-all") if not name_input.validate(item.name): error_dialog("Habit name is invalid.") return star_checkbox = HabitStarCheckbox(item, add_ui.refresh) star_checkbox.props("flat fab-mini color=grey") star_checkbox.classes("col-span-1") delete_button = HabitDeleteButton(item, habit_list, add_ui.refresh) delete_button.props("flat fab-mini color=grey") delete_button.classes("col-span-1") def add_page_ui(habit_list: HabitList): with layout(): with ui.column().classes("w-full pl-1 items-center"): add_ui(habit_list) with ui.grid(columns=9, rows=1).classes(grid_classes): add_button = HabitAddButton(habit_list, add_ui.refresh) add_button.classes("col-span-7")