import json\nfrom nicegui import events, ui\nfrom beaverhabits.app.db import User\nfrom beaverhabits.frontend.components import menu_header\nfrom beaverhabits.storage.dict import DictHabitList\nfrom beaverhabits.storage.meta import get_root_path\nfrom beaverhabits.storage.storage import HabitList, merge_habit_lists\nfrom beaverhabits.views import user_storage\n\nasync def import_from_json(text: str) -> HabitList:\n    try:\n        data = json.loads(text)\n        habit_list = DictHabitList(data)\n        if not habit_list.habits:\n            raise ValueError("No habits found in the JSON file.")\n        return habit_list\n    except json.JSONDecodeError:\n        raise ValueError("Invalid JSON format.")\n    except ValueError as e:\n        raise e\n\ndef import_ui_page(user: User):\n    menu_header("Import Habits", target=get_root_path())\n\n    async def handle_upload(e: events.UploadEventArguments):\n        file_content = e.content.read().decode("utf-8")\n        try:\n            imported_habit_list = await import_from_json(file_content)\n            confirmation_dialog = display_import_dialog(len(imported_habit_list.habits))\n            result = await confirmation_dialog\n            if result != "Yes":\n                return\n            from_habit_list = await user_storage.get_user_habit_list(user)\n            if from_habit_list:\n                merged_habit_list, added_habits, merged_count = merge_habit_lists(from_habit_list, imported_habit_list)\n                unchanged_count = len(from_habit_list.habits) - merged_count\n            else:\n                merged_habit_list = imported_habit_list\n                added_habits = imported_habit_list.habits\n                merged_count = 0\n                unchanged_count = 0\n            await user_storage.save_user_habit_list(user, merged_habit_list)\n            ui.notify(f"Successfully imported {len(imported_habit_list.habits)} habits. Added: {len(added_habits)}, Merged: {merged_count}, Unchanged: {unchanged_count}.", position="top", color="positive")\n        except Exception as e:\n            ui.notify(str(e), color="negative", position="top")\n\n    ui.upload(on_upload=handle_upload, max_files=1).props("accept=.json")\n    return\n\ndef display_import_dialog(habits_count: int):\n    with ui.dialog() as dialog, ui.card().classes("w-64"):\n        ui.label(f"Are you sure? Importing this file will add {habits_count} new habits and merge any existing ones.")\n        with ui.row():\n            ui.button("Yes", on_click=lambda: dialog.submit("Yes"))\n            ui.button("No", on_click=lambda: dialog.submit("No"))\n    return dialog\n