import json\nimport logging\n\nfrom nicegui import events, ui\n\nfrom beaverhabits.app.db import User\nfrom beaverhabits.frontend.components import menu_header\nfrom beaverhabits.storage.dict import DictHabitList\nfrom beaverhabits.storage.meta import get_root_path\nfrom beaverhabits.storage.storage import HabitList\nfrom beaverhabits.views import user_storage\n\nlogging.basicConfig(level=logging.INFO)\n\nasync def import_from_json(text: str) -> HabitList:\n    try:\n        d = json.loads(text)\n        return DictHabitList(d)\n    except json.JSONDecodeError as e:\n        logging.error(f"JSON decode error: {e}")\n        raise ValueError("Invalid JSON")\n    except Exception as e:\n        logging.error(f"Unexpected error: {e}")\n        raise\n\nasync def import_ui_page(user: User):\n    async def handle_upload(e: events.UploadEventArguments):\n        try:\n            text = e.content.read().decode("utf-8")\n            new_habit_list = await import_from_json(text)\n            current_habit_list = await user_storage.get_user_habit_list(user)\n            if current_habit_list:\n                merged_habit_list = await current_habit_list.merge(new_habit_list)\n                await user_storage.save_user_habit_list(user, merged_habit_list)\n                ui.notify(f"Merged {len(merged_habit_list.habits)} habits", position="top", color="positive")\n            else:\n                await user_storage.save_user_habit_list(user, new_habit_list)\n                ui.notify(f"Imported {len(new_habit_list.habits)} habits", position="top", color="positive")\n        except ValueError as e:\n            ui.notify(str(e), color="negative", position="top")\n        except Exception as e:\n            logging.error(f"Unexpected error: {e}")\n            ui.notify("Import failed", color="negative", position="top")\n\n    menu_header("Import", target=get_root_path())\n    ui.upload(on_upload=handle_upload, max_files=1).props("accept=.json")\n