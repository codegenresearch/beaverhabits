import json\nfrom nicegui import events, ui\nfrom beaverhabits.app.db import User\nfrom beaverhabits.frontend.components import menu_header\nfrom beaverhabits.storage.dict import DictHabitList\nfrom beaverhabits.storage.meta import get_root_path\nfrom beaverhabits.storage.storage import HabitList, merge_habit_lists\nfrom beaverhabits.views import user_storage\ndef convert_json_to_habit_list(text: str) -> HabitList:\n    data = json.loads(text)\n    habit_list = DictHabitList(data)\n    if not habit_list.habits:\n        raise ValueError("No habits found in the JSON file.")\n    return habit_list\ndef display_import_confirmation_dialog(user: User):\n    with ui.dialog() as dialog, ui.card().classes("w-64"):\n        ui.label("Are you sure? All your current habits will be replaced with the imported ones.")\n        with ui.row():\n            ui.button("Yes", on_click=lambda: dialog.submit("Yes"))\n            ui.button("No", on_click=lambda: dialog.submit("No"))\n    return dialog\nasync def handle_file_upload(event: events.UploadEventArguments, user: User):\n    confirmation_dialog = display_import_confirmation_dialog(user)\n    try:\n        user_response = await confirmation_dialog\n        if user_response != "Yes":\n            return\n        file_content = event.content.read().decode("utf-8")\n        imported_habit_list = convert_json_to_habit_list(file_content)\n        current_habit_list = await user_storage.get_user_habit_list(user)\n        if current_habit_list:\n            merged_habit_list = merge_habit_lists(current_habit_list, imported_habit_list)\n        else:\n            merged_habit_list = imported_habit_list\n        await user_storage.save_user_habit_list(user, merged_habit_list)\n        ui.notify(\n            f"Successfully imported {len(imported_habit_list.habits)} habits.",\n            position="top",\n            color="positive",\n        )\n    except json.JSONDecodeError:\n        ui.notify("Import failed: Invalid JSON format.", color="negative", position="top")\n    except Exception as error:\n        ui.notify(f"Import failed: {str(error)}", color="negative", position="top")\ndef render_import_ui_page(user: User):\n    menu_header("Import Habits", target=get_root_path())\n    ui.upload(on_upload=lambda e: handle_file_upload(e, user), max_files=1).props("accept=.json")\n    return