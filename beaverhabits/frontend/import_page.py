import json\nimport logging\nfrom nicegui import events, ui\nfrom beaverhabits.app.db import User\nfrom beaverhabits.frontend.components import menu_header\nfrom beaverhabits.storage.dict import DictHabitList\nfrom beaverhabits.storage.meta import get_root_path\nfrom beaverhabits.storage.storage import HabitList\nfrom beaverhabits.views import user_storage\n\nlogging.basicConfig(level=logging.INFO)\n\nasync def import_from_json(text: str) -> HabitList:\n    try:\n        d = json.loads(text)\n        habit_list = DictHabitList(d)\n        if not habit_list.habits:\n            raise ValueError("No habits found")\n        return habit_list\n    except json.JSONDecodeError as e:\n        logging.error(f"JSON decode error: {e}")\n        raise ValueError("Invalid JSON")\n    except Exception as e:\n        logging.error(f"Unexpected error: {e}")\n        raise ValueError("Failed to import habits")\n\nasync def import_ui_page(user: User):\n    with ui.dialog() as dialog, ui.card().classes("w-64"):\n        ui.label("Are you sure? All your current habits will be replaced.")\n        with ui.row():\n            ui.button("Yes", on_click=lambda: dialog.submit("Yes"))\n            ui.button("No", on_click=lambda: dialog.submit("No"))\n    \\n    async def handle_upload(e: events.UploadEventArguments):\n        try:\\n            result = await dialog\\n            if result != "Yes":\\n                return\\n            \\n            text = e.content.read().decode("utf-8")\\n            new_habit_list = await import_from_json(text)\\n            current_habit_list = await user_storage.get_user_habit_list(user)\\n            if current_habit_list:\\n                merged_habit_list = await current_habit_list.merge(new_habit_list)\\n                added_habits = len([habit for habit in merged_habit_list.habits if habit not in current_habit_list.habits])\\n                merged_habits = len([habit for habit in merged_habit_list.habits if habit in current_habit_list.habits])\\n                unchanged_habits = len(current_habit_list.habits) - merged_habits\\n                logging.info(f"Added: {added_habits}, Merged: {merged_habits}, Unchanged: {unchanged_habits}")\\n                await user_storage.save_user_habit_list(user, merged_habit_list)\\n                ui.notify(f"Added {added_habits}, Merged {merged_habits}, Unchanged {unchanged_habits} habits", position="top", color="positive")\\n            else:\\n                await user_storage.save_user_habit_list(user, new_habit_list)\\n                ui.notify(f"Imported {len(new_habit_list.habits)} habits", position="top", color="positive")\\n        except ValueError as e:\\n            ui.notify(str(e), color="negative", position="top")\\n        except Exception as e:\\n            logging.error(f"Unexpected error: {e}")\\n            ui.notify("Import failed", color="negative", position="top")\n    \\n    menu_header("Import", target=get_root_path())\n    ui.upload(on_upload=handle_upload, max_files=1).props("accept=.json")\n    return