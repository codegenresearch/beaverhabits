from pathlib import Path\nfrom typing import Optional\nfrom nicegui.storage import PersistentDict\nfrom beaverhabits.app.db import User\nfrom beaverhabits.configs import USER_DATA_FOLDER\nfrom beaverhabits.storage.dict import DictHabitList\nfrom beaverhabits.storage.storage import UserStorage\nfrom beaverhabits.storage.storage import merge_habit_lists\n\nKEY_NAME = "data"\n\nclass UserDiskStorage(UserStorage[DictHabitList]):\n\n    def _get_persistent_dict(self, user: User) -> PersistentDict:\n        path = Path(f"{USER_DATA_FOLDER}/{str(user.email)}.json")\n        return PersistentDict(path, encoding="utf-8")\n\n    async def get_user_habit_list(self, user: User) -> Optional[DictHabitList]:\n        d = self._get_persistent_dict(user).get(KEY_NAME)\n        if not d:\n            return None\n        return DictHabitList(d)\n\n    async def save_user_habit_list(self, user: User, habit_list: DictHabitList) -> None:\n        current_habit_list = await self.get_user_habit_list(user)\n        if current_habit_list is None:\n            current_habit_list = DictHabitList({})\n        merged_habit_list = await self.merge_user_habit_list(current_habit_list, habit_list)\n        self._save_habit_list(user, merged_habit_list)\n\n    async def merge_user_habit_list(self, current: DictHabitList, other: DictHabitList) -> DictHabitList:\n        return await current.merge(other)\n\n    def _save_habit_list(self, user: User, habit_list: DictHabitList) -> None:\n        d = self._get_persistent_dict(user)\n        d[KEY_NAME] = habit_list.data\n