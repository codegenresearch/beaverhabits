from pathlib import Path\nfrom typing import Optional\n\nfrom nicegui.storage import PersistentDict\n\nfrom beaverhabits.app.db import User\nfrom beaverhabits.configs import USER_DATA_FOLDER\nfrom beaverhabits.storage.dict import DictHabitList\nfrom beaverhabits.storage.storage import UserStorage\n\nKEY_NAME = "data"\n\n\nclass UserDiskStorage(UserStorage[DictHabitList]):\n    async def fetch_habits(self, user: User) -> Optional[DictHabitList]:\n        persistent_dict = self._get_persistent_dict(user)\n        habit_data = persistent_dict.get(KEY_NAME)\n        if habit_data is not None:\n            return DictHabitList(habit_data)\n        return None\n\n    async def update_habits(self, user: User, new_habits: DictHabitList) -> None:\n        current_habits = await self.fetch_habits(user)\n        if current_habits is None:\n            current_habits = DictHabitList({})\n        merged_habits = await self._merge_habits(current_habits, new_habits)\n        persistent_dict = self._get_persistent_dict(user)\n        persistent_dict[KEY_NAME] = merged_habits.data\n\n    async def _merge_habits(self, current: DictHabitList, other: DictHabitList) -> DictHabitList:\n        return await current.merge(other)\n\n    def _get_persistent_dict(self, user: User) -> PersistentDict:\n        path = Path(f"{USER_DATA_FOLDER}/{user.email}.json")\n        return PersistentDict(path, encoding="utf-8")\n