from pathlib import Path\nfrom typing import Optional\nimport logging\n\ntry:\n    from nicegui.storage import PersistentDict\nexcept ImportError as e:\n    logging.error(f"Failed to import PersistentDict: {e}")\n    raise\n\nfrom beaverhabits.app.db import User\nfrom beaverhabits.configs import USER_DATA_FOLDER\nfrom beaverhabits.storage.dict import DictHabitList\nfrom beaverhabits.storage.storage import UserStorage\n\nKEY_NAME = "data"\n\n\nclass UserDiskStorage(UserStorage[DictHabitList]):\n    def __init__(self, user: User):\n        self.user = user\n        self.persistent_dict = self._get_persistent_dict(user)\n\n    def _get_persistent_dict(self, user: User) -> PersistentDict:\n        path = Path(f"{USER_DATA_FOLDER}/{str(user.email)}.json")\n        return PersistentDict(path, encoding="utf-8")\n\n    async def get_user_habit_list(self) -> Optional[DictHabitList]:\n        d = self.persistent_dict.get(KEY_NAME)\n        if not d:\n            return None\n        return DictHabitList(d)\n\n    async def save_user_habit_list(self, habit_list: DictHabitList) -> None:\n        d = self.persistent_dict\n        d[KEY_NAME] = habit_list.data\n\n    async def merge_user_habit_list(self, other: DictHabitList) -> DictHabitList:\n        current = await self.get_user_habit_list()\n        if current is None:\n            return other\n\n        return await current.merge(other)\n